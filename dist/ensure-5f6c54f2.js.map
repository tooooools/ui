{"version":3,"file":"ensure-5f6c54f2.js","sources":["../lib/state/signal.js","../lib/state/readable.js","../lib/state/writable.js","../lib/state/derived.js","../lib/state/utils/ensure.js"],"sourcesContent":["function SignalListener (owner, fn, ctx, once) {\n  this.fn = fn\n  this.ctx = ctx || null\n  this.owner = owner\n  this.once = !!once\n}\n\nfunction removeNode (owner, node) {\n  if (node.prev) node.prev.next = node.next\n  if (node.next) node.next.prev = node.prev\n  node.ctx = node.fn = node.owner = null\n  if (node === owner._first) owner._first = node.next\n  if (node === owner._last) owner._last = node.prev\n}\n\nclass Signal {\n  constructor () {\n    this._first = this._last = null\n  }\n\n  dispatch (a0, a1, a2, a3, a4) {\n    let node = this._first\n    while (node) {\n      node.fn.call(node.ctx, a0, a1, a2, a3, a4)\n      node.once && this.unsubscribe(node)\n      node = node.next\n    }\n  }\n\n  subscribe (fn, ctx, once) {\n    const node = new SignalListener(this, fn, ctx, once)\n    if (!this._first) {\n      this._first = node\n      this._last = node\n    } else {\n      this._last.next = node\n      node.prev = this._last\n      this._last = node\n    }\n    return node\n  }\n\n  subscribeOnce (fn, ctx) {\n    return this.subscribe(fn, ctx, true)\n  }\n\n  unsubscribe (fn, ctx) {\n    if (fn instanceof SignalListener) return removeNode(this, fn)\n    if (!ctx) ctx = null\n    let node = this._first\n    while (node) {\n      if (node.fn === fn && node.ctx === ctx) removeNode(this, node)\n      node = node.next\n    }\n  }\n\n  unsubscribeAll () {\n    let node = this._first\n    this._first = this._last = null\n    while (node) {\n      removeNode(this, node)\n      node = node.next\n    }\n  }\n}\n\nexport { Signal }\nexport default function signal () {\n  return new Signal()\n}\n","import { Signal } from './signal'\n\nclass Readable extends Signal {\n  constructor (initialValue) {\n    super()\n    this.initial = initialValue\n    this.current = initialValue\n  }\n\n  set () {\n    throw new Error('Cannot set a different value for a Readable Signal. Use Writable instead')\n  }\n\n  get () {\n    return this.current\n  }\n}\n\nexport { Readable }\nexport default function readable (v) {\n  return new Readable(v)\n}\n","import { Readable } from './readable'\n\nclass Writable extends Readable {\n  constructor (v) {\n    super(v)\n    this.toggle = this.toggle.bind(this)\n    this.reset = this.reset.bind(this)\n  }\n\n  set (value, force) {\n    if (!force && this.current === value) return\n    this.previous = this.current\n\n    this.current = value\n    let node = this._first\n    while (node) {\n      node.fn.call(node.ctx, this.current, this.previous)\n      node.once && this.unsubscribe(node)\n      node = node.next\n    }\n  }\n\n  reset () {\n    this.set(this.initial)\n  }\n\n  toggle () {\n    this.set(!this.current)\n  }\n\n  update (cb, force) {\n    const value = cb(this.current)\n    this.set(value !== undefined ? value : this.current, force)\n  }\n}\n\nexport { Writable }\nexport default function writable (v) {\n  return new Writable(v)\n}\n","import { Writable } from './writable'\n\nfunction derived (observables, cb) {\n  const value = new Writable()\n\n  const setValue = value.set.bind(value)\n  delete value.set\n\n  const isArray = Array.isArray(observables)\n  let values = isArray ? (new Array(observables.length)) : null\n\n  if (isArray) {\n    for (let i = 0, l = observables.length; i < l; i++) {\n      values[i] = observables[i].current\n      observables[i].subscribe(function (v) {\n        values[i] = v\n        derive()\n      })\n    }\n  } else {\n    values = observables.current\n    observables.subscribe(function (v) {\n      values = v\n      derive()\n    })\n  }\n\n  derive()\n\n  function derive () {\n    const result = cb(values)\n    if (result && result.then) result.then(setValue)\n    else setValue(result)\n  }\n\n  return value\n}\n\nexport default derived\n","/**\n * Ensure the returned value is always a Signal instance:\n * - by trying to return the first found Signal instance\n * - by creating a Signal from the first defined value\n * - by creating an empty Signal\n *\n * IMPORTANT: the first found Signal will always be returned even if its\n * signature does not match the curried signal signature: this allows\n * interesting replacement patterns (ie forcing a writable in place of a readable)\n */\n\nimport { Signal } from '../signal'\n\nexport default signal => (...values) => {\n  for (const value of values) {\n    if (value instanceof Signal) {\n      return value\n    }\n\n    if (value !== undefined) {\n      return signal(value)\n    }\n  }\n\n  return signal(null)\n}\n"],"names":["SignalListener","owner","fn","ctx","once","removeNode","node","Signal","a0","a1","a2","a3","a4","signal","Readable","initialValue","readable","v","Writable","value","force","cb","writable","derived","observables","setValue","isArray","values","i","l","derive","result","ensure"],"mappings":"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"}