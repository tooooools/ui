{"version":3,"file":"ensure-59d782ef.cjs","sources":["../lib/state/signal.js","../lib/state/readable.js","../lib/state/writable.js","../lib/state/derived.js","../lib/state/utils/ensure.js"],"sourcesContent":["function SignalListener (owner, fn, ctx, once) {\n  this.fn = fn\n  this.ctx = ctx || null\n  this.owner = owner\n  this.once = !!once\n}\n\nfunction removeNode (owner, node) {\n  if (node.prev) node.prev.next = node.next\n  if (node.next) node.next.prev = node.prev\n  node.ctx = node.fn = node.owner = null\n  if (node === owner._first) owner._first = node.next\n  if (node === owner._last) owner._last = node.prev\n}\n\nclass Signal {\n  constructor () {\n    this._first = this._last = null\n  }\n\n  dispatch (a0, a1, a2, a3, a4) {\n    let node = this._first\n    while (node) {\n      node.fn.call(node.ctx, a0, a1, a2, a3, a4)\n      node.once && this.unsubscribe(node)\n      node = node.next\n    }\n  }\n\n  subscribe (fn, ctx, once) {\n    const node = new SignalListener(this, fn, ctx, once)\n    if (!this._first) {\n      this._first = node\n      this._last = node\n    } else {\n      this._last.next = node\n      node.prev = this._last\n      this._last = node\n    }\n    return node\n  }\n\n  subscribeOnce (fn, ctx) {\n    return this.subscribe(fn, ctx, true)\n  }\n\n  unsubscribe (fn, ctx) {\n    if (fn instanceof SignalListener) return removeNode(this, fn)\n    if (!ctx) ctx = null\n    let node = this._first\n    while (node) {\n      if (node.fn === fn && node.ctx === ctx) removeNode(this, node)\n      node = node.next\n    }\n  }\n\n  unsubscribeAll () {\n    let node = this._first\n    this._first = this._last = null\n    while (node) {\n      removeNode(this, node)\n      node = node.next\n    }\n  }\n}\n\nexport { Signal }\nexport default function signal () {\n  return new Signal()\n}\n","import { Signal } from './signal'\n\nclass Readable extends Signal {\n  constructor (initialValue) {\n    super()\n    this.initial = initialValue\n    this.current = initialValue\n  }\n\n  set () {\n    throw new Error('Cannot set a different value for a Readable Signal. Use Writable instead')\n  }\n\n  get () {\n    return this.current\n  }\n}\n\nexport { Readable }\nexport default function readable (v) {\n  return new Readable(v)\n}\n","import { Readable } from './readable'\n\nclass Writable extends Readable {\n  set (value, force) {\n    if (!force && this.current === value) return\n    this.previous = this.current\n\n    this.current = value\n    let node = this._first\n    while (node) {\n      node.fn.call(node.ctx, this.current, this.previous)\n      node.once && this.unsubscribe(node)\n      node = node.next\n    }\n  }\n\n  reset () {\n    this.set(this.initial)\n  }\n\n  toggle () {\n    this.set(!this.current)\n  }\n\n  update (cb, force) {\n    const value = cb(this.current)\n    this.set(value !== undefined ? value : this.current, force)\n  }\n}\n\nexport { Writable }\nexport default function writable (v) {\n  return new Writable(v)\n}\n","import { Writable } from './writable'\n\nfunction derived (observables, cb) {\n  const value = new Writable()\n\n  const setValue = value.set.bind(value)\n  delete value.set\n\n  const isArray = Array.isArray(observables)\n  let values = isArray ? (new Array(observables.length)) : null\n\n  if (isArray) {\n    for (let i = 0, l = observables.length; i < l; i++) {\n      values[i] = observables[i].current\n      observables[i].subscribe(function (v) {\n        values[i] = v\n        derive()\n      })\n    }\n  } else {\n    values = observables.current\n    observables.subscribe(function (v) {\n      values = v\n      derive()\n    })\n  }\n\n  derive()\n\n  function derive () {\n    const result = cb(values)\n    if (result && result.then) result.then(setValue)\n    else setValue(result)\n  }\n\n  return value\n}\n\nexport default derived\n","/**\n * Ensure the returned value is always a Signal instance:\n * - by trying to return the first found Signal instance\n * - by creating a Signal from the first defined value\n * - by creating an empty Signal\n *\n * IMPORTANT: the first found Signal will always be returned even if its\n * signature does not match the curried signal signature: this allows\n * interesting replacement patterns (ie forcing a writable in place of a readable)\n */\n\nimport { Signal } from '../signal'\n\nexport default signal => (...values) => {\n  for (const value of values) {\n    if (value instanceof Signal) {\n      return value\n    }\n\n    if (value !== undefined) {\n      return signal(value)\n    }\n  }\n\n  return signal(null)\n}\n"],"names":["SignalListener","owner","fn","ctx","once","removeNode","node","Signal","a0","a1","a2","a3","a4","signal","Readable","initialValue","readable","v","Writable","value","force","cb","writable","derived","observables","setValue","isArray","values","i","l","derive","result","ensure"],"mappings":"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"}