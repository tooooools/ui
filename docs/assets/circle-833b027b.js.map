{"version":3,"file":"circle-833b027b.js","sources":["../../lib/state/signal.js","../../lib/state/readable.js","../../lib/state/writable.js","../../lib/state/utils/ensure.js","../../node_modules/iconoir/icons/circle.svg?raw"],"sourcesContent":["function SignalListener (owner, fn, ctx, once) {\n  this.fn = fn\n  this.ctx = ctx || null\n  this.owner = owner\n  this.once = !!once\n}\n\nfunction removeNode (owner, node) {\n  if (node.prev) node.prev.next = node.next\n  if (node.next) node.next.prev = node.prev\n  node.ctx = node.fn = node.owner = null\n  if (node === owner._first) owner._first = node.next\n  if (node === owner._last) owner._last = node.prev\n}\n\nclass Signal {\n  constructor () {\n    this._first = this._last = null\n  }\n\n  dispatch (a0, a1, a2, a3, a4) {\n    let node = this._first\n    while (node) {\n      node.fn.call(node.ctx, a0, a1, a2, a3, a4)\n      node.once && this.unsubscribe(node)\n      node = node.next\n    }\n  }\n\n  subscribe (fn, ctx, once) {\n    const node = new SignalListener(this, fn, ctx, once)\n    if (!this._first) {\n      this._first = node\n      this._last = node\n    } else {\n      this._last.next = node\n      node.prev = this._last\n      this._last = node\n    }\n    return node\n  }\n\n  subscribeOnce (fn, ctx) {\n    return this.subscribe(fn, ctx, true)\n  }\n\n  unsubscribe (fn, ctx) {\n    if (fn instanceof SignalListener) return removeNode(this, fn)\n    if (!ctx) ctx = null\n    let node = this._first\n    while (node) {\n      if (node.fn === fn && node.ctx === ctx) removeNode(this, node)\n      node = node.next\n    }\n  }\n\n  unsubscribeAll () {\n    let node = this._first\n    this._first = this._last = null\n    while (node) {\n      removeNode(this, node)\n      node = node.next\n    }\n  }\n}\n\nexport { Signal }\nexport default function signal () {\n  return new Signal()\n}\n","import { Signal } from './signal'\n\nclass Readable extends Signal {\n  constructor (initialValue) {\n    super()\n    this.current = initialValue\n  }\n\n  set () {\n    throw new Error('Cannot set a different value for a Readable Signal. Use Writable instead')\n  }\n\n  get () {\n    return this.current\n  }\n}\n\nexport { Readable }\nexport default function readable (v) {\n  return new Readable(v)\n}\n","import { Readable } from './readable'\n\nclass Writable extends Readable {\n  set (value, force) {\n    if (!force && this.current === value) return\n    this.previous = this.current\n\n    this.current = value\n    let node = this._first\n    while (node) {\n      node.fn.call(node.ctx, this.current, this.previous)\n      node.once && this.unsubscribe(node)\n      node = node.next\n    }\n  }\n\n  update (cb, force) {\n    const value = cb(this.current)\n    this.set(value !== undefined ? value : this.current, force)\n  }\n}\n\nexport { Writable }\nexport default function writable (v) {\n  return new Writable(v)\n}\n","/**\n * Ensure the returned value is always a Signal instance:\n * - by trying to return the first found Signal instance\n * - by creating a Signal from the first defined value\n * - by creating an empty Signal\n *\n * IMPORTANT: the first found Signal will always be returned even if its\n * signature does not match the curried signal signature: this allows\n * interesting replacement patterns (ie forcing a writable in place of a readable)\n */\n\nimport { Signal } from '../signal'\n\nexport default signal => (...values) => {\n  for (const value of values) {\n    if (value instanceof Signal) {\n      return value\n    }\n\n    if (value !== undefined) {\n      return signal(value)\n    }\n  }\n\n  return signal(null)\n}\n","export default \"<svg width=\\\"24\\\" height=\\\"24\\\" stroke-width=\\\"1.5\\\" viewBox=\\\"0 0 24 24\\\" fill=\\\"none\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\">\\n<path d=\\\"M12 22C17.5228 22 22 17.5228 22 12C22 6.47715 17.5228 2 12 2C6.47715 2 2 6.47715 2 12C2 17.5228 6.47715 22 12 22Z\\\" stroke=\\\"currentColor\\\" stroke-linecap=\\\"round\\\" stroke-linejoin=\\\"round\\\"/>\\n</svg>\\n\""],"names":["SignalListener","owner","fn","ctx","once","removeNode","node","Signal","a0","a1","a2","a3","a4","Readable","initialValue","Writable","value","force","cb","writable","v","ensure","signal","values","Icon"],"mappings":"AAAA,SAASA,EAAgBC,EAAOC,EAAIC,EAAKC,EAAM,CAC7C,KAAK,GAAKF,EACV,KAAK,IAAMC,GAAO,KAClB,KAAK,MAAQF,EACb,KAAK,KAAO,CAAC,CAACG,CAChB,CAEA,SAASC,EAAYJ,EAAOK,EAAM,CAC5BA,EAAK,OAAMA,EAAK,KAAK,KAAOA,EAAK,MACjCA,EAAK,OAAMA,EAAK,KAAK,KAAOA,EAAK,MACrCA,EAAK,IAAMA,EAAK,GAAKA,EAAK,MAAQ,KAC9BA,IAASL,EAAM,SAAQA,EAAM,OAASK,EAAK,MAC3CA,IAASL,EAAM,QAAOA,EAAM,MAAQK,EAAK,KAC/C,CAEA,MAAMC,CAAO,CACX,aAAe,CACb,KAAK,OAAS,KAAK,MAAQ,IAC5B,CAED,SAAUC,EAAIC,EAAIC,EAAIC,EAAIC,EAAI,CAC5B,IAAIN,EAAO,KAAK,OAChB,KAAOA,GACLA,EAAK,GAAG,KAAKA,EAAK,IAAKE,EAAIC,EAAIC,EAAIC,EAAIC,CAAE,EACzCN,EAAK,MAAQ,KAAK,YAAYA,CAAI,EAClCA,EAAOA,EAAK,IAEf,CAED,UAAWJ,EAAIC,EAAKC,EAAM,CACxB,MAAME,EAAO,IAAIN,EAAe,KAAME,EAAIC,EAAKC,CAAI,EACnD,OAAK,KAAK,QAIR,KAAK,MAAM,KAAOE,EAClBA,EAAK,KAAO,KAAK,MACjB,KAAK,MAAQA,IALb,KAAK,OAASA,EACd,KAAK,MAAQA,GAMRA,CACR,CAED,cAAeJ,EAAIC,EAAK,CACtB,OAAO,KAAK,UAAUD,EAAIC,EAAK,EAAI,CACpC,CAED,YAAaD,EAAIC,EAAK,CACpB,GAAID,aAAcF,EAAgB,OAAOK,EAAW,KAAMH,CAAE,EACvDC,IAAKA,EAAM,MAChB,IAAIG,EAAO,KAAK,OAChB,KAAOA,GACDA,EAAK,KAAOJ,GAAMI,EAAK,MAAQH,GAAKE,EAAW,KAAMC,CAAI,EAC7DA,EAAOA,EAAK,IAEf,CAED,gBAAkB,CAChB,IAAIA,EAAO,KAAK,OAEhB,IADA,KAAK,OAAS,KAAK,MAAQ,KACpBA,GACLD,EAAW,KAAMC,CAAI,EACrBA,EAAOA,EAAK,IAEf,CACH,CC9DA,MAAMO,UAAiBN,CAAO,CAC5B,YAAaO,EAAc,CACzB,MAAO,EACP,KAAK,QAAUA,CAChB,CAED,KAAO,CACL,MAAM,IAAI,MAAM,0EAA0E,CAC3F,CAED,KAAO,CACL,OAAO,KAAK,OACb,CACH,CCbA,MAAMC,UAAiBF,CAAS,CAC9B,IAAKG,EAAOC,EAAO,CACjB,GAAI,CAACA,GAAS,KAAK,UAAYD,EAAO,OACtC,KAAK,SAAW,KAAK,QAErB,KAAK,QAAUA,EACf,IAAIV,EAAO,KAAK,OAChB,KAAOA,GACLA,EAAK,GAAG,KAAKA,EAAK,IAAK,KAAK,QAAS,KAAK,QAAQ,EAClDA,EAAK,MAAQ,KAAK,YAAYA,CAAI,EAClCA,EAAOA,EAAK,IAEf,CAED,OAAQY,EAAID,EAAO,CACjB,MAAMD,EAAQE,EAAG,KAAK,OAAO,EAC7B,KAAK,IAAIF,IAAU,OAAYA,EAAQ,KAAK,QAASC,CAAK,CAC3D,CACH,CAGe,SAASE,EAAUC,EAAG,CACnC,OAAO,IAAIL,EAASK,CAAC,CACvB,CCZA,MAAAC,EAAeC,GAAU,IAAIC,IAAW,CACtC,UAAWP,KAASO,EAAQ,CAC1B,GAAIP,aAAiBT,EACnB,OAAOS,EAGT,GAAIA,IAAU,OACZ,OAAOM,EAAON,CAAK,CAEtB,CAED,OAAOM,EAAO,IAAI,CACpB,ECzBeE,EAAA;AAAA;AAAA;","x_google_ignoreList":[4]}